services:
  sglang-dev:
    build:
      context: ..
      dockerfile: .devcontainer/Dockerfile.gh200
      args:
        HOST_UID: ${HOST_UID:-1000}
        HOST_GID: ${HOST_GID:-1000}
    container_name: sglang-dev
    entrypoint: ["/bin/bash", "/workspaces/sglang/.devcontainer/observability/init-run.sh"]
    command: ["sleep", "infinity"]
    user: "${HOST_UID:-1000}:${HOST_GID:-1000}"
    working_dir: /workspaces/sglang
    tty: true
    stdin_open: true
    gpus: all
    shm_size: 32g
    ipc: host
    extra_hosts:
      - host.docker.internal:host-gateway
    environment:
      HOME: /home/devuser
      CUDA_HOME: /usr/local/cuda
      TRITON_CACHE_DIR: /profiles/triton
      TORCHINDUCTOR_CACHE_DIR: /profiles/torchinductor
      FLASHINFER_WORKSPACE_DIR: /profiles/flashinfer
      LOG_ROOT: /telemetry/logs
      RUNTIME_ROOT: /telemetry
      RUN_META_FILE: /telemetry/container_run_meta.env
    volumes:
      - ..:/workspaces/sglang
      - ../.devcontainer/storage/models:/models
      - ../.devcontainer/storage/huggingface:/home/devuser/.cache/huggingface
      - ../.devcontainer/storage/profiles:/profiles
      - ../.devcontainer/storage/logs:/telemetry/logs
      - ../.devcontainer/storage/container_run_meta.env:/telemetry/container_run_meta.env
    ports:
      - "30000:30000"
      - "29000:29000"

  jaeger:
    profiles: ["observability"]
    image: jaegertracing/all-in-one:1.57
    restart: unless-stopped
    environment:
      COLLECTOR_OTLP_ENABLED: "true"
      SPAN_STORAGE_TYPE: badger
      BADGER_EPHEMERAL: "false"
      BADGER_DIRECTORY_VALUE: /badger/data
      BADGER_DIRECTORY_KEY: /badger/key
    volumes:
      - ../.devcontainer/storage/jaeger/badger:/badger
      - ../.devcontainer/storage/jaeger/badger2:/badger2
    ports:
      - "16686:16686"
      - "14250:14250"
      - "4317:4317"
      - "4318:4318"

  otel-collector:
    profiles: ["observability"]
    image: otel/opentelemetry-collector-contrib:latest
    restart: unless-stopped
    command: ["--config", "/etc/otelcol/config.yaml"]
    volumes:
      - ../.devcontainer/observability/otel-collector.yml:/etc/otelcol/config.yaml:ro
    depends_on:
      - jaeger

  prometheus:
    profiles: ["observability"]
    image: prom/prometheus:latest
    restart: unless-stopped
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.retention.time=30d"
    volumes:
      - ../.devcontainer/observability/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ../.devcontainer/storage/prometheus:/prometheus
    ports:
      - "9090:9090"

  dcgm-exporter:
    profiles: ["observability"]
    image: nvidia/dcgm-exporter:4.4.1-4.5.2-ubuntu22.04
    restart: unless-stopped
    privileged: true
    gpus: all
    environment:
      - DCGM_EXPORTER_KUBERNETES=false
    volumes:
      - /var/run/nvidia-persistenced/socket:/var/run/nvidia-persistenced/socket
      - /var/run/nvidia-driver:/var/run/nvidia-driver
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
    command:
      - "-f"
      - "/etc/dcgm-exporter/default-counters.csv"
    expose:
      - "9400"

  node-exporter:
    profiles: ["observability"]
    image: prom/node-exporter:latest
    restart: unless-stopped
    pid: host
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - "--path.rootfs=/rootfs"
      - "--path.procfs=/host/proc"
      - "--path.sysfs=/host/sys"
    ports:
      - "9100:9100"
